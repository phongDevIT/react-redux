{"ast":null,"code":"const INCREMENT = \"increment\";\nconst initialState = {\n  count: 0\n};\nexport const increment = () => ({\n  type: INCREMENT\n});\nfunction counterReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"increment\":\n      return {\n        ...state,\n        count: state.count + 1\n      };\n    default:\n      break;\n  }\n}\nexport default counterReducer;","map":{"version":3,"names":["INCREMENT","initialState","count","increment","type","counterReducer","state","arguments","length","undefined","action"],"sources":["C:/my-app-redux/src/redux/Counter.js"],"sourcesContent":["const INCREMENT = \"increment\";\r\n\r\nconst initialState = {\r\n    count: 0,\r\n};\r\nexport const increment = () => ({\r\n    type: INCREMENT,\r\n});\r\nfunction counterReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"increment\":\r\n            return {\r\n                ...state,\r\n                count: state.count + 1,\r\n            };\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\nexport default counterReducer;\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAW;AAE7B,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGA,CAAA,MAAO;EAC5BC,IAAI,EAAEJ;AACV,CAAC,CAAC;AACF,SAASK,cAAcA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,QAAQC,MAAM,CAACN,IAAI;IACf,KAAK,WAAW;MACZ,OAAO;QACH,GAAGE,KAAK;QACRJ,KAAK,EAAEI,KAAK,CAACJ,KAAK,GAAG;MACzB,CAAC;IAEL;MACI;EACR;AACJ;AACA,eAAeG,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}